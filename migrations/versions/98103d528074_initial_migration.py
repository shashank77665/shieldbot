"""Initial migration

Revision ID: 98103d528074
Revises: 
Create Date: 2025-01-26 21:50:11.856250

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '98103d528074'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'shieldbot_user',
        sa.Column('shieldbot_user_id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password_hash', sa.String(length=256), nullable=False),
        sa.Column('profile_picture', sa.String(length=255), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('shieldbot_user_id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username'),
    )

    # Drop the foreign key constraint on request_log and user table
    op.drop_constraint("request_log_user_id_fkey", "request_log", type_="foreignkey")

    # Drop the old user table
    op.drop_table("user")

    # Modify the request_log table
    with op.batch_alter_table("request_log", schema=None) as batch_op:
        # Add the new shieldbot_user_id column as nullable initially
        batch_op.add_column(sa.Column("shieldbot_user_id", sa.Integer(), nullable=True))

    # Populate shieldbot_user_id with a default user ID (update this to a valid user ID in your setup)
    op.execute("UPDATE request_log SET shieldbot_user_id = 1 WHERE shieldbot_user_id IS NULL")

    # Now make the shieldbot_user_id column NOT NULL and add the foreign key
    with op.batch_alter_table("request_log", schema=None) as batch_op:
        batch_op.alter_column("shieldbot_user_id", nullable=False)
        batch_op.create_foreign_key(
            "fk_shieldbot_user_id", "shieldbot_user", ["shieldbot_user_id"], ["shieldbot_user_id"]
        )
        batch_op.drop_column("user_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("request_log", schema=None) as batch_op:
        batch_op.add_column(sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint("fk_shieldbot_user_id", type_="foreignkey")
        batch_op.drop_column("shieldbot_user_id")

    op.create_table(
        "user",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("username", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=120), autoincrement=False, nullable=False),
        sa.Column("password_hash", sa.VARCHAR(length=256), autoincrement=False, nullable=False),
        sa.Column("profile_picture", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
        sa.UniqueConstraint("email", name="user_email_key"),
        sa.UniqueConstraint("username", name="user_username_key"),
    )
    op.drop_table("shieldbot_user")
    # ### end Alembic commands ###
